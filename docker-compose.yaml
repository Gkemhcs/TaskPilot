name: taskpilot-backend
services:

  redis_server:
    image: redis:alpine
    networks:
      - taskpilot_net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: taskpilot
      POSTGRES_PASSWORD: pilot1234
      POSTGRES_DB: taskpilot
      POSTGRES_INITDB_ARGS: "--auth=md5"
    networks:
      - taskpilot_net
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taskpilot"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s


  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"   # AMQP
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - taskpilot_net
    healthcheck:
    # use the flag --erlang-cookie if setting the erlang 
    # cookie was necessary (comment by red-riding-hood)
    # test: rabbitmq-diagnostics -q ping --erlang-cookie "mycookie"
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s


  migrate:
    image: migrate/migrate:latest
    volumes:
      - ./internal/db/migrations:/migrations
    command:
      ["-path", "/migrations", "-database", "postgres://taskpilot:pilot1234@db:5432/taskpilot?sslmode=disable", "up"]
    depends_on:
      db:
        condition: service_healthy
    networks:
      - taskpilot_net


  app:
    build: .
    volumes:
      - ./key.json:/app/key.json
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=taskpilot
      - DB_PASSWORD=pilot1234
      - DB_NAME=taskpilot
      - HOST=0.0.0.0
      - PORT=8080
      - JWT_ACCESS_TOKEN_SECRET=iri2rji2mdkwmd2j9ri3
      - JWT_REFRESH_TOKEN_SECRET=iri2rji2mdkwmd2j9ri3
      - REDIS_HOST=redis_server
      - REDIS_PORT=6379
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - STORAGE_TYPE=gcp
      - TEMP_DIR=/tmp
      - GOOGLE_APPLICATION_CREDENTIALS=/app/key.json
      - PROCESS_DIR=/tmp/processed
      - GCP_BUCKET=taskpilot-backend-data
      - GCP_PREFIX=imports/
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
      redis_server:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  
    networks:
      - taskpilot_net
    restart: unless-stopped
  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://taskpilot:pilot1234@db:5432/taskpilot?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      - db
    networks:
      - taskpilot_net


  task-worker:
    build:
      context: .
      dockerfile: Dockerfile.taskworker
    volumes:
      - ./key.json:/app/key.json
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=taskpilot
      - DB_PASSWORD=pilot1234
      - DB_NAME=taskpilot
      - STORAGE_TYPE=gcp
      - GOOGLE_APPLICATION_CREDENTIALS=/app/key.json
      - TEMP_DIR=/tmp
      - PROCESS_DIR=/tmp/processed
      - GCP_BUCKET=taskpilot-backend-data
      - GCP_PREFIX=imports/
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    networks:
      - taskpilot_net
    restart: unless-stopped

  project-worker:
    build:
      context: .
      dockerfile: Dockerfile.projectworker
    volumes:
      - ./key.json:/app/key.json
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=taskpilot
      - DB_PASSWORD=pilot1234
      - DB_NAME=taskpilot
      - STORAGE_TYPE=gcp
      - GOOGLE_APPLICATION_CREDENTIALS=/app/key.json
      - TEMP_DIR=/tmp
      - PROCESS_DIR=/tmp/processed
      - GCP_BUCKET=taskpilot-backend-data
      - GCP_PREFIX=imports/
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
  
    networks:
      - taskpilot_net
    restart: unless-stopped
  
  prometheus_server:
    image: prom/prometheus
  
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - taskpilot_net
    restart: unless-stopped

networks:
  taskpilot_net:

volumes:
  postgres_data:
